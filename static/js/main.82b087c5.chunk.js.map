{"version":3,"sources":["components/Button.js","components/Header.js","components/Event.js","components/Events.js","components/AddEvent.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","title","toggleForm","showForm","defaultProps","Event","event","onDelete","onToggleReminder","reminder","onDoubleClick","id","cursor","day","Events","events","map","AddEvent","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setShowForm","setEvents","Math","floor","random","newEvent","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82b087c5.chunk.js","sourcesContent":["const Button = ({color, text, onClick }) => {\r\n    return (\r\n        <div>\r\n            <button onClick={onClick} style={{backgroundColor: color}}className='btn'>{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","import Button from \"./Button\"\r\n\r\nconst Header = ({ title, toggleForm, showForm }) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button onClick={toggleForm} color={showForm ? 'red' : 'green'} text={showForm ? 'Close' : 'Add'} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Event Tracker'\r\n}\r\n\r\nexport default Header","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Event = ({ event, onDelete, onToggleReminder }) => {\r\n    return (\r\n        <div className={`event ${event.reminder ? 'reminder' : ''}`} onDoubleClick={ () => onToggleReminder(event.id)}>\r\n            <h3>{event.text}<FaTimes onClick={ () => onDelete(event.id)} style={{color: 'red', cursor: 'pointer'}}/></h3>\r\n            <p>{event.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Event","import Event from \"./Event\"\r\n\r\nconst Events = ({ events, onDelete, onToggleReminder }) => {\r\n\r\n    return (\r\n        <>\r\n            {events.map((event) => (\r\n                <Event key={event.id} event={event} onDelete={onDelete} onToggleReminder={onToggleReminder} />\r\n                )\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Events","import { useState } from \"react\"\r\n\r\nconst AddEvent = ({ onAdd }) => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Please add an event');\r\n            return;\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('');\r\n        setDay('');\r\n        setReminder(false);\r\n    }\r\n\r\n    return (\r\n        \r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Event</label>\r\n                <input type='text' placeholder='Add Event' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => setDay(e.target.value)}  />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input className='btn btn-block' type='submit' value='Save Event' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddEvent","import Header from \"./components/Header\";\nimport Events from \"./components/Events\";\nimport AddEvent from \"./components/AddEvent\";\nimport { useState } from \"react\"\n\nfunction App() {\n\n  const [showForm, setShowForm] = useState(false);\n  const [events, setEvents] = useState ([\n    {\n        id: 1,\n        text: \"Bouldering at Alien Bloc\",\n        day: \"Nov 5th at 2:30pm\",\n        reminder: true\n    },\n    {\n        id: 2,\n        text: \"Board Games at The Chanter\",\n        day: \"Nov 6th at 6:30pm\",\n        reminder: false\n    },\n    {\n        id: 3,\n        text: \"Drinks at Bennet's\",\n        day: \"Nov 25th at 8:30pm\",\n        reminder: true\n    }\n  ]);\n\n  const addEvent = (event) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newEvent = { id, ...event };\n    setEvents([...events, newEvent]);\n  }\n\n  const deleteEvent = (id) => {\n    setEvents(events.filter((event) => event.id !== id));\n  }\n\n  const toggleReminder = (id) => {\n    setEvents(events.map((event) => event.id === id ? {...event, reminder: !event.reminder} : event));\n  }\n\n  return (\n    <div className=\"container\">\n      <Header toggleForm={() => setShowForm(!showForm)} showForm={showForm} />\n      {showForm && <AddEvent onAdd={addEvent} />}\n      {events.length > 0 ? <Events events={events} onDelete={deleteEvent} onToggleReminder={toggleReminder}/>\n      : 'No Events Found'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}